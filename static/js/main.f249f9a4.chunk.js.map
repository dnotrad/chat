{"version":3,"sources":["firebase.js","App.jsx","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","App","useState","inputValue","setInputValue","messages","setMessages","useEffect","unsubscribe","collection","orderBy","onSnapshot","snapshot","forEach","doc","push","data","message","console","log","className","value","type","onChange","e","target","onClick","add","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2PAaEA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,gDACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,8CAKIR,ICXTS,EDWST,EAAf,ECXoBU,YAqCLC,MAnCf,WAAgB,IAAD,EACuBC,mBAAS,IADhC,mBACNC,EADM,KACMC,EADN,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,KA0Bb,OAtBAC,qBAAW,WACT,IAAMC,EAAcT,EAAGU,WAAW,YAAYC,QAAQ,UAAW,OAAOC,YACvE,SAASC,GACP,IAAIP,EAAW,GACfO,EAASC,SAAS,SAAAC,GAChBT,EAASU,KAAKD,EAAIE,OAAOC,YAE3BX,EAAaD,MAEhB,OAAO,kBAAMG,OACZ,IAEHD,qBAAW,WACTW,QAAQC,IAAId,KACX,CAACA,IASF,sBAAKe,UAAU,MAAf,UACE,uBAAOC,MAAOlB,EAAYmB,KAAK,OAAOC,SAAa,SAACC,GAAD,OAAOpB,EAAcoB,EAAEC,OAAOJ,UACjF,wBAAQK,QAAY,kBATNT,EASuBd,OARvCJ,EAAGU,WAAW,YAAYkB,IAAI,CAC5BV,YAFa,IAACA,GASd,qBACCZ,EAASuB,KAAK,SAAAX,GAAO,OAAI,8BAAMA,WCxBvBY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f249f9a4.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA3mE1pxhOx_PNYUXE2q1qLJFNRd9WlgS0\",\r\n    authDomain: \"chat-reac.firebaseapp.com\",\r\n    databaseURL: \"https://chat-reac-default-rtdb.firebaseio.com\",\r\n    projectId: \"chat-reac\",\r\n    storageBucket: \"chat-reac.appspot.com\",\r\n    messagingSenderId: \"808761910304\",\r\n    appId: \"1:808761910304:web:e2370427ffa838fe0bc845\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import './App.css';\nimport react, {useEffect, useState} from \"react\";\nimport firebase from \"./firebase\";\n\nconst db = firebase.firestore();\n\nfunction App() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect( () => {\n    const unsubscribe = db.collection(\"messages\").orderBy(\"message\", \"asc\").onSnapshot(\n     function(snapshot) {\n       let messages = [];\n       snapshot.forEach( doc => {\n         messages.push(doc.data().message);\n       } )\n       setMessages( messages )\n    });\n    return () => unsubscribe();\n  }, [])\n\n  useEffect( () => {\n    console.log(messages);\n  }, [messages] )\n\n  let addMessage = (message) => {\n    db.collection(\"messages\").add({\n      message\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <input value={inputValue} type=\"text\" onChange = { (e) => setInputValue(e.target.value)}/>\n      <button onClick = { () => addMessage(inputValue)}>ADD mes</button>\n      {messages.map( message => <div>{message}</div> )}\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}