{"version":3,"sources":["components/Message.module.css","components/Chat.module.css","components/Footer.module.css","components/Messages.module.css","components/loader/Loader.module.css","components/Auth.module.css","firebase.js","redux/store.js","components/Header.jsx","components/Message.jsx","components/loader/Loader.jsx","components/Messages.jsx","assets/img/mail.svg","components/Footer.jsx","components/Chat.jsx","components/Auth.jsx","components/Registr.jsx","App.jsx","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","UPDATE_MESSAGES","UPDATE_CURRENT_USER","UPDATE_USERS_COUNTER","initialState","messages","currentUser","usersOnline","store","createStore","state","action","type","uid","console","log","count","window","Header","props","className","s","header","onClick","logOut","exit","Message","messageBlock","userId","currentUserId","mine","inner","reverse","author","userEmail","message","Loader","position","lds_ellipsis","db","firestore","connect","id","updateMessages","updateUsersCounter","useState","isLoader","setIsLoader","setUsersOnline","useEffect","userGoOffline","collection","doc","set","JSON","parse","localStorage","getItem","addEventListener","get","then","data","unsub","onSnapshot","snapshot","forEach","setItem","stringify","unsubscribe","orderBy","limitToLast","push","mesId","date","seconds","removeEventListener","messagesDiv","useRef","current","setTimeout","scrollTop","scrollHeight","ref","map","m","counter","Footer","inputValue","setInputValue","footer","onSubmit","e","preventDefault","add","Date","submitForm","form","value","onChange","target","input","button","src","mailImg","alt","updateCurrentUser","setUserEmail","isRedirect","setIsRedirect","auth","onAuthStateChanged","user","emailVerified","email","to","chat","signOut","Auth","setEmail","password","setPassword","title","signInWithEmailAndPassword","trim","userCredential","alert","catch","error","logUser","inputs","inputTitle","placeholder","reg","Registr","isModal","setIsModal","a","createUserWithEmailAndPassword","sendEmailVerification","modal","modal__inner","close","modal__title","regUser","App","path","component","Chat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79d9495b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageBlock\":\"Message_messageBlock__utJZM\",\"mine\":\"Message_mine__iiOk3\",\"inner\":\"Message_inner__225oS\",\"reverse\":\"Message_reverse__2JLTd\",\"message\":\"Message_message__1vAGJ\",\"author\":\"Message_author__2TXa-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__x04Bp\",\"header\":\"Chat_header__1C0rL\",\"exit\":\"Chat_exit__2GGOj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__324hG\",\"form\":\"Footer_form__WgY_f\",\"input\":\"Footer_input__3d9MR\",\"button\":\"Footer_button__2CRvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__3RwPP\",\"counter\":\"Messages_counter__20fVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"Loader_position__N8BIn\",\"lds_ellipsis\":\"Loader_lds_ellipsis__1iJi9\",\"lds-ellipsis1\":\"Loader_lds-ellipsis1__27YTn\",\"lds-ellipsis2\":\"Loader_lds-ellipsis2__RsNal\",\"lds-ellipsis3\":\"Loader_lds-ellipsis3__BlnwX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__2y4GR\",\"form\":\"Auth_form__33eMm\",\"title\":\"Auth_title__2aWY8\",\"inputTitle\":\"Auth_inputTitle__3CdyK\",\"input\":\"Auth_input__2-oVn\",\"button\":\"Auth_button__3DF7T\",\"log\":\"Auth_log__3Ytqi\",\"reg\":\"Auth_reg__2n3nC\",\"modal\":\"Auth_modal__Rro9I\",\"modal__inner\":\"Auth_modal__inner__208cL\",\"close\":\"Auth_close__1Oels\",\"modal__title\":\"Auth_modal__title__T5iSy\"};","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA3mE1pxhOx_PNYUXE2q1qLJFNRd9WlgS0\",\r\n    authDomain: \"chat-reac.firebaseapp.com\",\r\n    databaseURL: \"https://chat-reac-default-rtdb.firebaseio.com\",\r\n    projectId: \"chat-reac\",\r\n    storageBucket: \"chat-reac.appspot.com\",\r\n    messagingSenderId: \"808761910304\",\r\n    appId: \"1:808761910304:web:e2370427ffa838fe0bc845\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import {createStore} from 'redux';\r\nconst UPDATE_MESSAGES = \"UPDATE-MESSAGES\";\r\nconst UPDATE_CURRENT_USER = \"UPDATE-CURRENT-USER\";\r\nconst UPDATE_USERS_COUNTER = \"UPDATE-USERS-COUNTER\";\r\nlet initialState = {\r\n    messages: [],\r\n    currentUser: {},\r\n    usersOnline: 0,\r\n};\r\nlet messageReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case UPDATE_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messages: [ ...action.messages ]\r\n            }\r\n        case UPDATE_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: {uid: action.uid}\r\n            }\r\n        case UPDATE_USERS_COUNTER:\r\n            console.log(action.count);\r\n            return {\r\n                ...state,\r\n                usersOnline: action.count,\r\n            }\r\n        default: \r\n            return state;  \r\n    }\r\n}\r\nlet store = createStore(messageReducer);\r\nexport const updateMessages = (messages) =>{\r\n    return(\r\n        {type: UPDATE_MESSAGES, messages}\r\n    )\r\n};\r\nexport const updateCurrentUser = (uid) =>{\r\n    return(\r\n        {type: UPDATE_CURRENT_USER, uid}\r\n    )\r\n};\r\nexport const updateUsersCounter = (count) =>{\r\n    return(\r\n        {type: UPDATE_USERS_COUNTER, count}\r\n    )\r\n};\r\nwindow.store = store;\r\nexport default store;","import s from \"./Chat.module.css\";\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <div className={s.header}>\r\n            <button onClick={props.logOut} className={s.exit}>Выйти</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import s from \"./Message.module.css\"\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={`${s.messageBlock} ${props.userId === props.currentUserId ? `${s.mine}` : ``}`}>\r\n            <div className={`${s.inner} ${props.userId === props.currentUserId ? `${s.reverse}` : ``}`}>\r\n                <div className={`${s.author} ${props.userId === props.currentUserId ? `${s.mine}` : ``}`}>\r\n                    {props.userEmail[0]}\r\n                </div>\r\n                <div className={`${s.message} ${props.userId === props.currentUserId ? `${s.mine}` : ``}`}>\r\n                    {props.message}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Loader.module.css';\r\n\r\nlet Loader = () => {\r\n    return(\r\n        <div className={s.position}>\r\n            <div className = {s.lds_ellipsis}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import react, {useEffect, useRef, useState} from \"react\";\r\nimport firebase from \"../firebase\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateMessages, updateUsersCounter} from \"../redux/store\";\r\nimport s from \"./Messages.module.css\";\r\nimport Message from \"./Message\";\r\nimport Loader from \"./loader/Loader\";\r\n\r\nexport const db = firebase.firestore();\r\n\r\n\r\nconst Messages = (props) => {\r\n    const [isLoader, setIsLoader] = useState(true);\r\n    const [usersOnline, setUsersOnline] = useState(0);\r\n    useEffect( () => {\r\n\r\n      let userGoOffline = () => {\r\n          db.collection(\"usersOnline\").doc(\"counter\").set({\r\n            count: JSON.parse( localStorage.getItem(\"usersOnline\") ) - 1\r\n          })\r\n      }\r\n      window.addEventListener('beforeunload', userGoOffline);\r\n\r\n       //  узнаю сколько там лежит\r\n       db.collection(\"usersOnline\").doc(\"counter\").get().then(doc => {\r\n          //увеличиваю на +1 юзера\r\n          db.collection(\"usersOnline\").doc(\"counter\").set({\r\n            count: doc.data().count + 1\r\n          })\r\n       })\r\n       \r\n      // получаю кол-во человек онлайн\r\n      const unsub = db.collection(\"usersOnline\").onSnapshot(\r\n        function(snapshot) {\r\n          // snapshot.forEach( doc => props.updateUsersCounter(doc.data().count) )\r\n          snapshot.forEach( doc => {\r\n            setUsersOnline(doc.data().count)\r\n            localStorage.setItem(\"usersOnline\", JSON.stringify(doc.data().count))\r\n          } )\r\n       })\r\n     \r\n      // получаю смс\r\n      const unsubscribe = db.collection(\"messages\").orderBy(\"date\", \"asc\").limitToLast(15).onSnapshot(\r\n       function(snapshot) {\r\n         let messages = [];\r\n         snapshot.forEach( doc => messages.push({ userId: doc.data().userId, message: doc.data().message, userEmail: doc.data().userEmail, mesId: doc.data().date.seconds}) )\r\n         props.updateMessages( messages );\r\n         setIsLoader(false);\r\n      });\r\n\r\n      return () => {\r\n        window.removeEventListener('beforeunload', userGoOffline);\r\n        db.collection(\"usersOnline\").doc(\"counter\").set({\r\n          count: JSON.parse( localStorage.getItem(\"usersOnline\") ) - 1\r\n        })\r\n        unsubscribe();\r\n        unsub();\r\n      }\r\n    }, [])\r\n\r\n    let messagesDiv = useRef(null);\r\n    if (messagesDiv.current) {\r\n      setTimeout(() => {\r\n        messagesDiv.current.scrollTop = messagesDiv.current.scrollHeight;\r\n      }, 1);\r\n    }\r\n    return(\r\n       <div className={s.messages} ref={messagesDiv}>\r\n           {isLoader \r\n           ? <Loader /> \r\n           : props.messages.map( (m) => \r\n           <Message \r\n           key={m.mesId} \r\n           userId={m.userId} \r\n           message = {m.message}\r\n           currentUserId= {props.id} \r\n           userEmail = {m.userEmail}/> )\r\n           }\r\n           <div className={s.counter}>Онлайн: {usersOnline} </div> \r\n       </div>\r\n    )\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n      messages: state.messages,\r\n      id: state.currentUser.uid,\r\n      usersOnline: state.usersOnline,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {updateMessages, updateUsersCounter})(Messages);","export default __webpack_public_path__ + \"static/media/mail.607ad05e.svg\";","import react, {useState, useEffect} from \"react\";\r\nimport s from \"./Footer.module.css\";\r\nimport mailImg from \"../assets/img/mail.svg\";\r\nimport {db} from \"./Messages\";\r\n\r\nconst Footer = (props) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    let submitForm = (e, message) => {\r\n        e.preventDefault();\r\n        if(message) {\r\n            db.collection(\"messages\").add({\r\n                userEmail: props.userEmail,\r\n                message,\r\n                userId: props.uid,\r\n                date: new Date(),\r\n            })\r\n            setInputValue(\"\");\r\n        }\r\n    }\r\n    return(\r\n        <div className={s.footer}>\r\n            <form onSubmit={ (e) => submitForm(e, inputValue)} className={s.form}>\r\n                <input value={inputValue} onChange={ (e) => setInputValue(e.target.value) } className={s.input} type=\"text\"/>\r\n                <button className={s.button}>\r\n                    <img src={mailImg} alt=\"\"/>\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer;","import react, {useEffect, useState} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport firebase from \"../firebase\";\r\nimport 'firebase/auth';\r\nimport { connect } from \"react-redux\";\r\nimport { updateCurrentUser } from \"../redux/store\";\r\nimport Header from \"./Header\";\r\nimport Messages from \"./Messages\";\r\nimport Footer from \"./Footer\";\r\nimport s from \"./Chat.module.css\";\r\n\r\nconst Chat = (props) => {\r\n    const [userEmail, setUserEmail] = useState(\"\")\r\n    const [isRedirect, setIsRedirect] = useState(false)\r\n    useEffect( () => {\r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n            (user && user.emailVerified) ? setIsRedirect(false) : setIsRedirect(true)\r\n            props.updateCurrentUser(user.uid)\r\n            setUserEmail(user.email);\r\n          });\r\n    }, [] )\r\n \r\n    let logOut = () => {\r\n      firebase.auth().signOut();\r\n    }\r\n    if(isRedirect) return <Redirect to=\"auth\"/>\r\n    return(\r\n        <div className={s.chat}>\r\n            <Header logOut={logOut}/>\r\n            <Messages />\r\n            <Footer uid = {props.id} userEmail = {userEmail}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return(\r\n        {\r\n            id: state.currentUser.uid\r\n        }\r\n    )\r\n}\r\nexport default connect(mapStateToProps, { updateCurrentUser }) (Chat);","import react, {useState} from \"react\";\r\nimport { NavLink, Redirect } from \"react-router-dom\";\r\nimport firebase from \"../firebase\";\r\nimport 'firebase/auth';\r\nimport s from \"./Auth.module.css\";\r\nconst Auth = (props) => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isRedirect, setIsRedirect] = useState(false);\r\n    let logUser = (e, email, password) => {\r\n        e.preventDefault();\r\n        firebase.auth().signInWithEmailAndPassword(email.trim(), password.trim()).then((userCredential) => {\r\n            let user = userCredential.user;\r\n            if(user && user.emailVerified){\r\n                setIsRedirect(true)\r\n            }else{\r\n                alert(\"Неверные данные или почта не подтверждена!\")\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            alert(\"Неверные данные или почта не подтверждена!\")\r\n          });\r\n    }\r\n    if(isRedirect) return <Redirect to=\"/\"/>\r\n    return(\r\n        <div className={s.auth}>\r\n            <div className={s.title}>Войти в чат</div>\r\n            <form onSubmit={(e) => logUser(e, email, password)} className={s.form}>\r\n                <div className={s.inputs}>\r\n                    <div className={s.inputTitle}>e-mail</div>\r\n                    <input type=\"text\" placeholder=\"Ваш e-mail\" value={email} onChange={ (e) => setEmail(e.target.value)} className={s.input}/>\r\n                    <div className={s.inputTitle}>пароль</div>\r\n                    <input type=\"password\" placeholder=\"Ваш пароль\" value={password} onChange={ (e) => setPassword(e.target.value)} className={s.input}/>\r\n                </div>\r\n                <button className={`${s.button} ${s.log}`}>Войти</button>\r\n                <NavLink to=\"registr\" className={`${s.button} ${s.reg}`} >Регистрация</NavLink>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default Auth;","import react, {useState, useEffect} from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport firebase from \"../firebase\";\r\nimport 'firebase/auth';\r\nimport s from \"./Auth.module.css\";\r\n\r\nconst Registr = () => {\r\n    const [isModal, setIsModal] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    async function regUser(e, email, password){\r\n        e.preventDefault();\r\n        try {\r\n            const data = await firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( (userCredential) => {\r\n                let user = userCredential.user;\r\n                user.sendEmailVerification().then( () => {\r\n                    setIsModal(true);\r\n                    console.log(\"emal sent\");\r\n                }).catch(function(error) {\r\n                    alert(error)\r\n                });\r\n            })\r\n            \r\n        } catch (error) {\r\n            alert(error.message)\r\n            throw error\r\n        }\r\n    }\r\n    let sendEmail = () => {\r\n        let user = firebase.auth().currentUser;\r\n        if(user) user.sendEmailVerification().then( () => setIsModal(true) )\r\n    }\r\n    return(\r\n        <>\r\n        <div className={s.auth}>\r\n\r\n            { \r\n            isModal && \r\n            <div className={s.modal}>\r\n                <div className={s.modal__inner}>\r\n                    <button onClick={ () => setIsModal(false)} className={s.close}>X</button>\r\n                    <div className={s.modal__title}>\r\n                        На {email} было отправлено письмо!\r\n                        <br/>\r\n                        Перейдите по ссылке в письме и возвращайтесь :)\r\n                        <br/>\r\n                        *проверьте спам, возможно, оно там\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n\r\n            <div className={s.title}>Регистрация</div>\r\n            <form onSubmit={(e) => regUser(e, email, password)} className={s.form}>\r\n                <div className={s.inputs}>\r\n                    <div className={s.inputTitle}>e-mail</div>\r\n                    <input type=\"text\" placeholder=\"Ваш e-mail\" value={email} onChange={ (e) => setEmail(e.target.value.trim())} className={s.input}/>\r\n                    <div className={s.inputTitle}>пароль</div>\r\n                    <input type=\"password\" placeholder=\"Ваш пароль\" value={password} onChange={ (e) => setPassword(e.target.value.trim())} className={s.input}/>\r\n                </div>\r\n                <button className={`${s.button} ${s.log}`}>Зарегестрироваться</button>\r\n                <NavLink to=\"/auth\" className={`${s.button} ${s.log}`}>Войти</NavLink>\r\n                <button type=\"button\" className={`${s.button} ${s.reg}`} onClick={ sendEmail }>Письмо не пришло</button>\r\n            </form>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Registr;","import Chat from \"./components/Chat\";\nimport Auth from \"./components/Auth\";\nimport Registr from \"./components/Registr\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport firebase from \"./firebase\";\nimport \"firebase/auth\";\n\nconst App = (props) => {\n  return (\n    <div className=\"App\">\n      <Route path=\"/auth\" component={Auth}/>\n      <Route path=\"/registr\" component={Registr}/>\n      <Route path=\"/\" component={Chat}/>\n    </div> \n  );\n}\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from './redux/store';\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}